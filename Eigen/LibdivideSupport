// This file is part of Eigen, a lightweight C++ template library
// for linear algebra.
//
// This Source Code Form is subject to the terms of the Mozilla
// Public License v. 2.0. If a copy of the MPL was not distributed
// with this file, You can obtain one at http://mozilla.org/MPL/2.0/.
#ifndef EIGEN_LIBDIVIDESUPPORT_MODULE_H
#define EIGEN_LIBDIVIDESUPPORT_MODULE_H

namespace Eigen {
namespace internal {
#define IS_LIBDIVIDE_TYPE(T)(                      \
   Eigen::internal::is_same<T, uint16_t>::value || \
   Eigen::internal::is_same<T,  int16_t>::value || \
   Eigen::internal::is_same<T, uint32_t>::value || \
   Eigen::internal::is_same<T,  int32_t>::value || \
   Eigen::internal::is_same<T, uint64_t>::value || \
   Eigen::internal::is_same<T,  int64_t>::value)

#define SRC_IS_REPRESENTABLE_AS_DST(SRC, DST)                                        \
   ( Eigen::NumTraits<SRC>::IsInteger && Eigen::NumTraits<DST>::IsInteger) && \
   (!Eigen::NumTraits<SRC>::IsSigned  || Eigen::NumTraits<DST>::IsSigned)  && \
   ( Eigen::NumTraits<SRC>::digits()  <= Eigen::NumTraits<DST>::digits())

#define IS_LIBDIVIDE_COMPATIBLE(NUM, DEN) (IS_LIBDIVIDE_TYPE(NUM)) && (SRC_IS_REPRESENTABLE_AS_DST(DEN, NUM))
}  // namespace internal
}  // namespace Eigen

#include "Core"
#include "src/LibdivideSupport/LibdivideSupport.h"

#endif // EIGEN_LIBDIVIDESUPPORT_MODULE_H