# Refined Hexagon DSP CI with Clean Architecture
# Uses CI-focused Dockerfile in eigen-mirror/ci/Dockerfile

# Build Docker images for CI
build:docker:hexagon:
  stage: .pre
  image: docker:latest
  services:
    - docker:dind
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
    DOCKER_BUILDKIT: "1"
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    # Build CI-optimized image for x86_64
    - |
      docker buildx build \
        --platform linux/amd64 \
        --build-arg HEXAGON_TOOLCHAIN_VERSION=20.1.4 \
        --tag $CI_REGISTRY_IMAGE/eigen-ci:hexagon-latest \
        --tag $CI_REGISTRY_IMAGE/eigen-ci:hexagon-$CI_COMMIT_SHORT_SHA \
        --file ci/Dockerfile \
        --push \
        .
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
    - if: $CI_PIPELINE_SOURCE == "web"
    - if: $CI_COMMIT_BRANCH == "master"
    - if: $CI_COMMIT_BRANCH == "hexagon_toolchain"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      changes:
        - "ci/Dockerfile"
        - "ci/**/*hexagon*"
        - "cmake/HexagonToolchain.cmake"
  # tags:
  #   - docker
  #   - linux

# Base CI configuration using clean Docker image
.build:linux:hexagon:ci:
  stage: build
  image: $CI_REGISTRY_IMAGE/eigen-ci:hexagon-latest
  variables:
    EIGEN_CI_TARGET_ARCH: hexagon
    EIGEN_CI_CROSS_TARGET_TRIPLE: hexagon-unknown-linux-musl
    EIGEN_CI_BUILD_TARGET: "packetmath_1 packetmath_2 packetmath_3 basicstuff_1 vectorization_logic_1"
    EIGEN_CI_HEXAGON_ARCH: v68
    EIGEN_CI_HEXAGON_TOOLCHAIN_VERSION: "20.1.4"
    EIGEN_CI_HEXAGON_HVX_LENGTH: "128B"
  before_script:
    - export CCACHE_DIR=/workspace/.cache/ccache
    - mkdir -p ${CCACHE_DIR}
    - ccache -s
  script:
    - mkdir -p ${EIGEN_CI_BUILDDIR:-.build}
    - cd ${EIGEN_CI_BUILDDIR:-.build}
    - |
      cmake \
        -DCMAKE_TOOLCHAIN_FILE=${PWD}/../cmake/HexagonToolchain.cmake \
        -DCMAKE_BUILD_TYPE=Release \
        -DEIGEN_TEST_HEXAGON=ON \
        -DBUILD_TESTING=ON \
        -GNinja \
        ${EIGEN_CI_ADDITIONAL_ARGS} \
        ..
    - ninja ${EIGEN_CI_BUILD_TARGET}
  after_script:
    - ccache -s
  artifacts:
    paths:
      - ${EIGEN_CI_BUILDDIR:-.build}/
    expire_in: 1 week
    when: always
  cache:
    key: "hexagon-ci-$CI_COMMIT_REF_SLUG-$EIGEN_CI_HEXAGON_ARCH"
    paths:
      - .cache/ccache/
    policy: pull-push
  # tags:
  #   - linux
  #   - eigen-runner

######## Hexagon v68 Builds ############################################

# Standard v68 build
build:linux:hexagon:v68:ci:
  extends: .build:linux:hexagon:ci
  variables:
    EIGEN_CI_HEXAGON_ARCH: v68
    EIGEN_CI_BUILDDIR: .build-hexagon-v68
    EIGEN_CI_ADDITIONAL_ARGS: "-DCMAKE_BUILD_TYPE=Release"
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
    - if: $CI_PIPELINE_SOURCE == "web"
    - if: $CI_COMMIT_BRANCH == "master"
    - if: $CI_COMMIT_BRANCH == "hexagon_toolchain"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"

# HVX-enabled build
build:linux:hexagon:v68:hvx:ci:
  extends: .build:linux:hexagon:ci
  variables:
    EIGEN_CI_HEXAGON_ARCH: v68
    EIGEN_CI_BUILDDIR: .build-hexagon-v68-hvx
    EIGEN_CI_ADDITIONAL_ARGS: "-DCMAKE_BUILD_TYPE=Release -DEIGEN_TEST_HVX=ON"
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
    - if: $CI_PIPELINE_SOURCE == "web"
    - if: $CI_COMMIT_BRANCH == "master"
    - if: $CI_COMMIT_BRANCH == "hexagon_toolchain"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"

# Debug build
build:linux:hexagon:v68:debug:ci:
  extends: .build:linux:hexagon:ci
  variables:
    EIGEN_CI_HEXAGON_ARCH: v68
    EIGEN_CI_BUILDDIR: .build-hexagon-v68-debug
    EIGEN_CI_ADDITIONAL_ARGS: "-DCMAKE_BUILD_TYPE=Debug"
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
    - if: $CI_PIPELINE_SOURCE == "web"
    - if: $CI_COMMIT_BRANCH == "master"
    - if: $CI_COMMIT_BRANCH == "hexagon_toolchain"

# Optimized build for performance testing
build:linux:hexagon:v68:optimized:ci:
  extends: .build:linux:hexagon:ci
  variables:
    EIGEN_CI_HEXAGON_ARCH: v68
    EIGEN_CI_BUILDDIR: .build-hexagon-v68-optimized
    EIGEN_CI_ADDITIONAL_ARGS: "-DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS_RELEASE='-O3 -DNDEBUG -march=native'"
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
    - if: $CI_PIPELINE_SOURCE == "web"

######## Hexagon v73 Builds ############################################

build:linux:hexagon:v73:ci:
  extends: .build:linux:hexagon:ci
  variables:
    EIGEN_CI_HEXAGON_ARCH: v73
    EIGEN_CI_BUILDDIR: .build-hexagon-v73
    EIGEN_CI_ADDITIONAL_ARGS: "-DCMAKE_BUILD_TYPE=Release"
  allow_failure: true
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
    - if: $CI_PIPELINE_SOURCE == "web"

build:linux:hexagon:v73:hvx:ci:
  extends: .build:linux:hexagon:ci
  variables:
    EIGEN_CI_HEXAGON_ARCH: v73
    EIGEN_CI_BUILDDIR: .build-hexagon-v73-hvx
    EIGEN_CI_ADDITIONAL_ARGS: "-DCMAKE_BUILD_TYPE=Release -DEIGEN_TEST_HVX=ON"
  allow_failure: true
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
    - if: $CI_PIPELINE_SOURCE == "web"

######## Testing Jobs ###################################################

# Base test configuration
.test:linux:hexagon:ci:
  stage: test
  image: $CI_REGISTRY_IMAGE/eigen-ci:hexagon-latest
  variables:
    EIGEN_CI_TARGET_ARCH: hexagon
    EIGEN_CI_CTEST_LABEL: "Hexagon"
    EIGEN_CI_TEST_TIMEOUT: "300"
    EIGEN_CI_MAX_PARALLEL_TESTS: "4"
  script:
    - cd ${EIGEN_CI_BUILDDIR:-.build}
    - ctest --output-on-failure --timeout ${EIGEN_CI_TEST_TIMEOUT} -j${EIGEN_CI_MAX_PARALLEL_TESTS}
  artifacts:
    when: always
    paths:
      - ${EIGEN_CI_BUILDDIR:-.build}/Testing/
    reports:
      junit: ${EIGEN_CI_BUILDDIR:-.build}/Testing/**/Test.xml
    expire_in: 3 days
  # tags:
  #   - linux
  #   - eigen-runner

# v68 testing
test:linux:hexagon:v68:ci:
  extends: .test:linux:hexagon:ci
  variables:
    EIGEN_CI_HEXAGON_ARCH: v68
    EIGEN_CI_BUILDDIR: .build-hexagon-v68
  dependencies:
    - build:linux:hexagon:v68:ci
  needs:
    - job: build:linux:hexagon:v68:ci
      artifacts: true
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
    - if: $CI_PIPELINE_SOURCE == "web"
    - if: $CI_COMMIT_BRANCH == "master"
    - if: $CI_COMMIT_BRANCH == "hexagon_toolchain"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"

test:linux:hexagon:v68:hvx:ci:
  extends: .test:linux:hexagon:ci
  variables:
    EIGEN_CI_HEXAGON_ARCH: v68
    EIGEN_CI_BUILDDIR: .build-hexagon-v68-hvx
    EIGEN_CI_TEST_TIMEOUT: "600"  # Longer timeout for HVX tests
  dependencies:
    - build:linux:hexagon:v68:hvx:ci
  needs:
    - job: build:linux:hexagon:v68:hvx:ci
      artifacts: true
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
    - if: $CI_PIPELINE_SOURCE == "web"
    - if: $CI_COMMIT_BRANCH == "master"
    - if: $CI_COMMIT_BRANCH == "hexagon_toolchain"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"

######## Quick Validation Build #########################################

# Minimal build for quick validation (MR pipeline)
build:linux:hexagon:minimal:ci:
  extends: .build:linux:hexagon:ci
  variables:
    EIGEN_CI_HEXAGON_ARCH: v68
    EIGEN_CI_BUILDDIR: .build-hexagon-minimal
    EIGEN_CI_BUILD_TARGET: ""  # Build library only
    EIGEN_CI_ADDITIONAL_ARGS: "-DCMAKE_BUILD_TYPE=Release -DBUILD_TESTING=OFF"
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"

# Corresponding test job for the minimal build  
test:linux:hexagon:minimal:ci:
  extends: .test:linux:hexagon:ci
  variables:
    EIGEN_CI_HEXAGON_ARCH: v68
    EIGEN_CI_BUILDDIR: .build-hexagon-minimal
    EIGEN_CI_CTEST_LABEL: "Hexagon-Minimal"
    EIGEN_CI_TEST_TIMEOUT: "120"
  dependencies:
    - build:linux:hexagon:minimal:ci
  needs:
    - job: build:linux:hexagon:minimal:ci
      artifacts: true
  script:
    - ls -la ${EIGEN_CI_BUILDDIR:-.build}/
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" 